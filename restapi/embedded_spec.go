// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a Image Resize server.",
    "title": "Image Resize",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "fedorenko.tolik@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "imageresize.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/images": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "uploads an image",
        "operationId": "uploadFile",
        "parameters": [
          {
            "type": "string",
            "description": "Additional data to pass to server",
            "name": "additionalMetadata",
            "in": "formData"
          },
          {
            "type": "file",
            "description": "file to upload",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/images/{imageId}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Shows the image",
        "operationId": "imageShow",
        "parameters": [
          {
            "type": "integer",
            "description": "Image Id to show image",
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          "400": {
            "description": "Invalid Image Id"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Image": {
      "type": "object",
      "required": [
        "imageURL"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "imageURL": {
          "type": "string",
          "example": "PathToTheFile"
        }
      },
      "xml": {
        "name": "image"
      }
    }
  },
  "tags": [
    {
      "description": "Resize your images",
      "name": "image",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a Image Resize server.",
    "title": "Image Resize",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "fedorenko.tolik@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "imageresize.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/images": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "uploads an image",
        "operationId": "uploadFile",
        "parameters": [
          {
            "type": "string",
            "description": "Additional data to pass to server",
            "name": "additionalMetadata",
            "in": "formData"
          },
          {
            "type": "file",
            "description": "file to upload",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/images/{imageId}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Shows the image",
        "operationId": "imageShow",
        "parameters": [
          {
            "type": "integer",
            "description": "Image Id to show image",
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          "400": {
            "description": "Invalid Image Id"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Image": {
      "type": "object",
      "required": [
        "imageURL"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "imageURL": {
          "type": "string",
          "example": "PathToTheFile"
        }
      },
      "xml": {
        "name": "image"
      }
    }
  },
  "tags": [
    {
      "description": "Resize your images",
      "name": "image",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
}
